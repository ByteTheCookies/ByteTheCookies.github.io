<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ByteTheCookies</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on ByteTheCookies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Snake</title>
      <link>http://localhost:1313/writeups/cyberspace2024/snake/</link>
      <pubDate>Mon, 02 Sep 2024 10:59:36 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/snake/</guid>
      <description>Snake Description: Can you slither to the win?
Link to the binary: Elf file
Introduction We are faced with a binary file written in Rust (you can see it by simply running strings snake | grep rustc) where we are made to play Snake, the goal is to get PRECISELY to 16525 points.
Solution The solutions were actually different, some people used tools to analyze the memory of a process in real time, I preferred a &amp;lsquo;slower&amp;rsquo; approach, or rather the first thing that came to mind, so I opened binary ninja despite the file being stripped and looked for a value for constant exactly 0xa (i.</description>
    </item>
    
    <item>
      <title>Feature Unlocked</title>
      <link>http://localhost:1313/writeups/cyberspace2024/feature_unlocked/</link>
      <pubDate>Mon, 02 Sep 2024 10:59:31 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/feature_unlocked/</guid>
      <description>Feature unlocked Description: The world&amp;rsquo;s coolest app has a brand new feature! Too bad it&amp;rsquo;s not released until after the CTF..
Link: https://feature-unlocked-web-challs.csc.tf/
Introduction Feature unlocked is part of the first wave of the web and is one of the first challanges I solved. Made by cryptocat, who we salute, it is a fairly simple challange if you read the code correctly.
Source # filename: main.py import subprocess import base64 import json import time import requests import os from flask import Flask, request, render_template, make_response, redirect, url_for from Crypto.</description>
    </item>
    
    <item>
      <title>ZipZone</title>
      <link>http://localhost:1313/writeups/cyberspace2024/zipzone/</link>
      <pubDate>Mon, 02 Sep 2024 10:59:17 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/zipzone/</guid>
      <description>Zipzone Description: I was tired of trying to find a good file server for zip files, so I made my own! It&amp;rsquo;s still a work in progress, but I think it&amp;rsquo;s pretty good so far.
Link: https://zipzone-web.challs.csc.tf/
Introduction ZipZone is the only one web in the beginner&amp;rsquo;s category and, as the title suggests, you have to upload zip files that will be unzipped later, so you have to download the extracted files afterwards.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/writeups/cyberspace2024/trendz/</link>
      <pubDate>Mon, 02 Sep 2024 10:59:04 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/trendz/</guid>
      <description>Trendz Description: &amp;hellip;
Introduction &amp;hellip;
Source &amp;hellip;
# filename: file.py &amp;hellip;
Solution &amp;hellip;
# filename: file.py $ flag: flag{redacted} Author: ... </description>
    </item>
    
    <item>
      <title>trendy windy trigonity</title>
      <link>http://localhost:1313/writeups/cyberspace2024/trendy_windy_trigonity/</link>
      <pubDate>Mon, 02 Sep 2024 10:58:30 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/trendy_windy_trigonity/</guid>
      <description>Trendy windy trigonity Description: have you seen Tan challenge before? see maple version pi documentation!
Introduction trendy windy trigonity was a crypto CTF CyberSpace CTF 2024 added during the second wave.
from Crypto.Util.number import bytes_to_long flag = REDACTED print(len(flag)) R = RealField(1000) a, b = bytes_to_long(flag[:len(flag)//2]), bytes_to_long(flag[len(flag)//2:]) x = R(0.75872961153339387563860550178464795474547887323678173252494265684893323654606628651427151866818730100357590296863274236719073684620030717141521941211167282170567424114270941542016135979438271439047194028943997508126389603529160316379547558098144713802870753946485296790294770557302303874143106908193100) enc = a*cos(x)+b*sin(x) # 38 # 2.78332652222000091147933689155414792020338527644698903976732528036823470890155538913578083110732846416012108159157421703264608723649277363079905992717518852564589901390988865009495918051490722972227485851595410047572144567706501150041757189923387228097603575500648300998275877439215112961273516978501e45 The challenge uses sagemath to handle high precision floating point numbers, in this case a RealField with 1000 bits of precision.</description>
    </item>
    
    <item>
      <title>CyberSpace CTF 2024</title>
      <link>http://localhost:1313/writeups/cyberspace2024/</link>
      <pubDate>Mon, 02 Sep 2024 10:52:16 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/cyberspace2024/</guid>
      <description> CyberSpace CTF 2024 Description Get ready to dive into the cyberspace and tackle challenges across categories such as Forensics, Reverse Engineering, Cryptography, Jail, and many more, at https://2024.csc.tf!
Url Discord Performance Summary CTFs: 21/63 Total points: 2032 Position: 83/830 Rating points: ? Writeups Crypto trendy windy trigonity Web ZipZone FeatureUnlocked Trendz (part 1 and 2) Rev Snake </description>
    </item>
    
    <item>
      <title>Miku vs. Machine</title>
      <link>http://localhost:1313/writeups/sekaictf2024/mikuvsmachine/</link>
      <pubDate>Mon, 26 Aug 2024 17:04:29 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/sekaictf2024/mikuvsmachine/</guid>
      <description>Miku vs. Machine Description: Time limit is 2 seconds for this challenge.
Official resources of challenge
Introduction The goal is to distribute the hours of n singers in m shows. Each show has a number of hours equal to l (unknown) and can only change singers once. We also want that each singer will have the same time on stage.
Solution To solve this problem, I use a greedy strategy that iteratively divides the available singing time among the singers, ensuring that each singer fulfills their required hours.</description>
    </item>
    
    <item>
      <title>Crack Me</title>
      <link>http://localhost:1313/writeups/sekaictf2024/crackme/</link>
      <pubDate>Mon, 26 Aug 2024 17:04:19 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/sekaictf2024/crackme/</guid>
      <description>Crack Me Description: Developed for SekaiCTF 2022 but never got a chance to release it. Can you log in and claim the flag?
Introduction First rev ctf of Sekai 2024 with an apk attached, so we have a mobile challenge on our hands. The first thing to do (which I strongly advise against in a real environment) is to download and install the app to get a quick overview of what it does.</description>
    </item>
    
    <item>
      <title>Some Trick</title>
      <link>http://localhost:1313/writeups/sekaictf2024/sometrick/</link>
      <pubDate>Mon, 26 Aug 2024 17:04:19 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/sekaictf2024/sometrick/</guid>
      <description>Some Trick Description: Bob and Alice found a futuristic version of opunssl and replaced all their needs for doofy wellmen.
Introduction Some Trick was the first cryptography challenge in the 2024 edition of SekaiCTF. The challenge implements a key exchange based on a set of permutations and asks us to retrieve the flag that was used as a key in Bob&amp;rsquo;s first encryption.
import random from secrets import randbelow, randbits from flag import FLAG CIPHER_SUITE = randbelow(2**256) print(f&amp;quot;oPUN_SASS_SASS_l version 4.</description>
    </item>
    
    <item>
      <title>SekaiCTF 2024</title>
      <link>http://localhost:1313/writeups/sekaictf2024/</link>
      <pubDate>Mon, 26 Aug 2024 16:58:34 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/sekaictf2024/</guid>
      <description>SekaiCTF 2024 Description SekaiCTF is back for its third iteration! This year’s competition will feature various categories designed to test participants’ skills and incentivize learning. Our CTF will have more difficult challenges, and are catered towards intermediate and advanced players—however, there will still be beginner-friendly challenges to welcome players on the newer side.
Url Discord Performance Summary CTFs: 3/34 Total points: 369 Position: 136/1230 Rating points: 2.721 Writeups Rev CrackMe Crypto Some trick PPC (Professional Programming &amp;amp; Coding) Miku vs.</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>http://localhost:1313/writeups/idekctf2024/hello/</link>
      <pubDate>Sun, 18 Aug 2024 12:58:59 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/idekctf2024/hello/</guid>
      <description>Hello Description: Just to warm you up for the next Fight :&amp;ldquo;D
Introduction Then we have an apparently empty page, but where we can via a ?name= parameter enter some text, the page will then respond with hello, {text entered}
The with an ngix server
Moreover, ctf in general gives us the possibility of using an admin bot where the flag is set in the cookies
Source # filename: index.py &amp;lt;?</description>
    </item>
    
    <item>
      <title>IdekCTF 2024</title>
      <link>http://localhost:1313/writeups/idekctf2024/</link>
      <pubDate>Sun, 18 Aug 2024 12:58:37 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/idekctf2024/</guid>
      <description> IdekCTF 2024 Description idekCTF is an information security CTF competition organized by the idek team and is aimed at the entire spectrum from high school and university students to experienced players. idekCTF will cover the standard Jeopardy-style CTF topics (binary exploitation, reverse engineering, cryptography, web exploitation, and forensics) as well as other, less standard categories.
Url Discord Performance Summary CTFs: 6/35 Total points: 732 Position: 101/1070 Rating points: 5.405 Writeups Web Hello </description>
    </item>
    
    <item>
      <title>Kirbytime</title>
      <link>http://localhost:1313/writeups/litctf2024/kirbytime/</link>
      <pubDate>Tue, 13 Aug 2024 13:01:07 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/litctf2024/kirbytime/</guid>
      <description>Kirbytime Description: Welcome to Kirby&amp;rsquo;s Website.
Introduction We find ourselves in front of a very pink Kirby-themed page, where we are asked to enter a password of 7 characters.
Source # filename: main.py import sqlite3 from flask import Flask, request, redirect, render_template import time app = Flask(__name__) @app.route(&#39;/&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;]) def login(): message = None if request.method == &#39;POST&#39;: password = request.form[&#39;password&#39;] real = &#39;REDACTED&#39; if len(password) != 7: return render_template(&#39;login.</description>
    </item>
    
    <item>
      <title>Lexington Informatics Tournament CTF 2024</title>
      <link>http://localhost:1313/writeups/litctf2024/</link>
      <pubDate>Tue, 13 Aug 2024 12:20:57 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/litctf2024/</guid>
      <description> Lexington Informatics Tournament CTF Description Lexington Informatics Tournament CTF 2024 is a Jeopardy-style, beginner-friendly online CTF that&amp;rsquo;s open to everyone.
Url Discord Performance Summary CTFs: 18/32 Total points: 2068 Position: 95/830 Rating points: 19.095 Writeups Web Kirbytime </description>
    </item>
    
    <item>
      <title>File Sharing Portal</title>
      <link>http://localhost:1313/writeups/noobzctf2024/filesharingportal/</link>
      <pubDate>Tue, 06 Aug 2024 11:27:07 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/noobzctf2024/filesharingportal/</guid>
      <description>File Sharing Portal Description: Welcome to the file sharing portal! We only support tar files!
Introduction The ctf has a very simple structure: we have a form in which we are asked to insert a tar file; once the tar file has been inserted, it is unzipped and we are shown the name of files it contains; by clicking on the different files, we can read their contents.
Source The source has comments added later to allow a better understanding of the code in the writeups</description>
    </item>
    
    <item>
      <title>WaaS</title>
      <link>http://localhost:1313/writeups/noobzctf2024/waas/</link>
      <pubDate>Tue, 06 Aug 2024 11:27:07 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/noobzctf2024/waas/</guid>
      <description>Waas Description: Writing as a Service!
Introduction WaaS (Writing as a Service) allows us to overwrite a file on the system (after some input validation) and insert anything (until a newline is met) we want in it.
import subprocess from base64 import b64decode as d while True: print(&amp;quot;[1] Write to a file\n[2] Get the flag\n[3] Exit&amp;quot;) try: inp = int(input(&amp;quot;Choice: &amp;quot;).strip()) except: print(&amp;quot;Invalid input!&amp;quot;) exit(0) if inp == 1: file = input(&amp;quot;Enter file name: &amp;quot;).</description>
    </item>
    
    <item>
      <title>N00bzCTF 2024</title>
      <link>http://localhost:1313/writeups/n00bzctf2024/</link>
      <pubDate>Mon, 05 Aug 2024 18:26:54 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/n00bzctf2024/</guid>
      <description> N00bz CTF 2024 Description A 48 hours CTF hosted by n00bz for n00bz. Organized with beginner friendly challenges (and some hard ones), n00bzCTF is dedicated to make cyber security more friendly and approachable for complete n00bz.
Url Discord Performance Summary CTFs: 31/32 Total points: 9794.000 Position: 24/967 Rating points: 24.067 Writeups Web File Sharing Portal Misc Waas </description>
    </item>
    
  </channel>
</rss>